"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[985],{8453:(n,e,a)=>{a.d(e,{R:()=>r,x:()=>o});var s=a(6540);const t={},i=s.createContext(t);function r(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),s.createElement(i.Provider,{value:e},n.children)}},8505:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"examples/advanced-configuration","title":"Advanced Configuration Examples","description":"Here are some advanced examples of configuring and using Censor in more complex scenarios.","source":"@site/docs/examples/advanced-configuration.md","sourceDirName":"examples","slug":"/examples/advanced-configuration","permalink":"/censor/examples/advanced-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/vpakhuchyi/censor/tree/main/documentation/docs/examples/advanced-configuration.md","tags":[],"version":"current","lastUpdatedBy":"Viktor","lastUpdatedAt":1743858422000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"Complex Examples","permalink":"/censor/examples/complex"}}');var t=a(4848),i=a(8453);const r={sidebar_position:2},o="Advanced Configuration Examples",c={},d=[{value:"Custom Masking Patterns",id:"custom-masking-patterns",level:2},{value:"Complex Nested Structures",id:"complex-nested-structures",level:2},{value:"Custom Field Matching",id:"custom-field-matching",level:2},{value:"Loading Configuration from File",id:"loading-configuration-from-file",level:2}];function m(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"advanced-configuration-examples",children:"Advanced Configuration Examples"})}),"\n",(0,t.jsx)(e.p,{children:"Here are some advanced examples of configuring and using Censor in more complex scenarios."}),"\n",(0,t.jsx)(e.h2,{id:"custom-masking-patterns",children:"Custom Masking Patterns"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/vpakhuchyi/censor"\n)\n\nfunc main() {\n    c := censor.New(\n        censor.WithFields([]censor.Field{\n            {\n                Name: "credit_card",\n                Mask: "XXXX-XXXX-XXXX-$last4",\n            },\n            {\n                Name: "email",\n                Mask: "$first3****@$domain",\n            },\n        }),\n    )\n    \n    data := map[string]interface{}{\n        "credit_card": "4111-1111-1111-1234",\n        "email": "john.doe@example.com",\n    }\n    \n    sanitized := c.Process(data)\n    fmt.Printf("%+v\\n", sanitized)\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"complex-nested-structures",children:"Complex Nested Structures"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/vpakhuchyi/censor"\n)\n\ntype Address struct {\n    Street  string\n    City    string\n    Country string\n}\n\ntype Payment struct {\n    CardNumber string\n    CVV       string\n}\n\ntype User struct {\n    Username string\n    Password string\n    Address  Address\n    Payment  Payment\n    Metadata map[string]interface{}\n}\n\nfunc main() {\n    c := censor.New(\n        censor.WithOptions(censor.Options{\n            Recursive: true,\n            PartialMatch: true,\n        }),\n    )\n    \n    user := User{\n        Username: "john_doe",\n        Password: "secret123",\n        Address: Address{\n            Street:  "123 Main St",\n            City:    "New York",\n            Country: "USA",\n        },\n        Payment: Payment{\n            CardNumber: "4111-1111-1111-1234",\n            CVV:       "123",\n        },\n        Metadata: map[string]interface{}{\n            "secret_key": "api_key_123",\n            "email":     "john@example.com",\n        },\n    }\n    \n    sanitized := c.Process(user)\n    fmt.Printf("%+v\\n", sanitized)\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"custom-field-matching",children:"Custom Field Matching"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/vpakhuchyi/censor"\n)\n\nfunc main() {\n    c := censor.New(\n        censor.WithOptions(censor.Options{\n            CaseSensitive: true,\n            PartialMatch: false,\n        }),\n        censor.WithFields([]censor.Field{\n            {Name: "Password", Mask: "***"},  // Will only match exact "Password"\n            {Name: "SECRET", Mask: "###"},    // Will only match exact "SECRET"\n        }),\n    )\n    \n    data := map[string]interface{}{\n        "Password": "secret123",      // Will be masked\n        "password": "secret456",      // Won\'t be masked (case sensitive)\n        "SECRET": "key123",          // Will be masked\n        "secret_key": "key456",      // Won\'t be masked (no partial match)\n    }\n    \n    sanitized := c.Process(data)\n    fmt.Printf("%+v\\n", sanitized)\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"loading-configuration-from-file",children:"Loading Configuration from File"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/vpakhuchyi/censor"\n)\n\nfunc main() {\n    // Load configuration from file\n    config, err := censor.LoadConfig("censor.yml")\n    if err != nil {\n        panic(err)\n    }\n    \n    // Create censor instance with loaded configuration\n    c := censor.New(\n        censor.WithConfig(config),\n    )\n    \n    data := map[string]interface{}{\n        "username": "john_doe",\n        "password": "secret123",\n        "api_key": "key123",\n    }\n    \n    sanitized := c.Process(data)\n    fmt.Printf("%+v\\n", sanitized)\n}\n'})}),"\n",(0,t.jsxs)(e.p,{children:["Example ",(0,t.jsx)(e.code,{children:"censor.yml"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'fields:\n  - name: password\n    mask: "***"\n  - name: api_key\n    mask: "key_****"\n  - name: credit_card\n    mask: "XXXX-XXXX-XXXX-$last4"\n\noptions:\n  case_sensitive: true\n  partial_match: false\n  recursive: true\n'})}),"\n",(0,t.jsxs)(e.p,{children:["These examples demonstrate more advanced usage patterns of Censor. For more information about specific features and options, refer to the ",(0,t.jsx)(e.a,{href:"../configuration",children:"Configuration"})," guide."]})]})}function l(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(m,{...n})}):m(n)}}}]);