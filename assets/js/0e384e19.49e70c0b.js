"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[976],{7879:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"intro","title":"What is Censor","description":"Censor is a Go library designed to protect sensitive information in your applications by automatically masking sensitive data before it reaches logs, API responses, or external systems. It provides a robust solution for data sanitization with minimal configuration.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/censor/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/vpakhuchyi/censor-doc/tree/main/docs/intro.md","tags":[],"version":"current","lastUpdatedBy":"Viktor","lastUpdatedAt":1743873319000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docs","next":{"title":"Getting Started","permalink":"/censor/getting-started"}}');var i=n(4848),r=n(8453);const o={sidebar_position:1},a="What is Censor",l={},c=[{value:"Key Features",id:"key-features",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"what-is-censor",children:"What is Censor"})}),"\n",(0,i.jsx)(t.p,{children:"Censor is a Go library designed to protect sensitive information in your applications by automatically masking sensitive data before it reaches logs, API responses, or external systems. It provides a robust solution for data sanitization with minimal configuration."}),"\n",(0,i.jsx)(t.h2,{id:"key-features",children:"Key Features"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Automatic Data Sanitization"}),": Automatically masks sensitive data in structs"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Multiple Output Formats"}),": Supports both TEXT and JSON output formats"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Logger Integration"}),": Built-in support for popular logging frameworks (zap, slog, zerolog)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Customizable Masking Rules"}),": Define custom mask values and patterns to exclude from masking"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Struct Field Control"}),": Use struct tags to control field visibility"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Type Safety"}),": Full support for Go's type system"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(t.p,{children:"Ready to get started? Check out these guides:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"getting-started",children:"Getting Started"})," - Installation and basic usage"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"configuration",children:"Configuration"})," - Customization options"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"type-handling/overview",children:"Type Support"})," - Supported Go types"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"logger-handlers/zap",children:"Logger Integration"})," - Logger integration"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"examples/data-leak-prevention",children:"Examples"})," - Real-world usage scenarios"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);