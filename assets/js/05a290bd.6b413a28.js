"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[942],{957:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"What is Censor","href":"/censor/intro","docId":"intro","unlisted":false},{"type":"link","label":"Getting Started","href":"/censor/getting-started","docId":"getting-started","unlisted":false},{"type":"link","label":"Configuration","href":"/censor/configuration","docId":"configuration","unlisted":false},{"type":"category","label":"Type Support","items":[{"type":"link","label":"Overview","href":"/censor/type-handling/overview","docId":"type-handling/overview","unlisted":false},{"type":"link","label":"Basic Types","href":"/censor/type-handling/basic-types","docId":"type-handling/basic-types","unlisted":false},{"type":"link","label":"Complex Types","href":"/censor/type-handling/complex-types","docId":"type-handling/complex-types","unlisted":false},{"type":"link","label":"Special Types","href":"/censor/type-handling/special-types","docId":"type-handling/special-types","unlisted":false},{"type":"link","label":"Format-Specific","href":"/censor/type-handling/format-specific","docId":"type-handling/format-specific","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Logger Integration","items":[{"type":"link","label":"Zap","href":"/censor/logger-handlers/zap","docId":"logger-handlers/zap","unlisted":false},{"type":"link","label":"Slog","href":"/censor/logger-handlers/slog","docId":"logger-handlers/slog","unlisted":false},{"type":"link","label":"Zerolog","href":"/censor/logger-handlers/zerolog","docId":"logger-handlers/zerolog","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Examples","items":[{"type":"link","label":"Data Leak Prevention","href":"/censor/examples/data-leak-prevention","docId":"examples/data-leak-prevention","unlisted":false},{"type":"link","label":"Simple Examples","href":"/censor/examples/simple","docId":"examples/simple","unlisted":false},{"type":"link","label":"Complex Examples","href":"/censor/examples/complex","docId":"examples/complex","unlisted":false},{"type":"link","label":"Advanced Configuration","href":"/censor/examples/advanced-configuration","docId":"examples/advanced-configuration","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"basic-usage":{"id":"basic-usage","title":"Basic Usage","description":"This guide covers the fundamental usage patterns of Censor, helping you get started with data masking in your Go applications."},"configuration":{"id":"configuration","title":"Configuration","description":"Censor provides flexible configuration options to customize its behavior.","sidebar":"docs"},"examples/advanced-configuration":{"id":"examples/advanced-configuration","title":"Advanced Configuration Examples","description":"Here are some advanced examples of configuring and using Censor in more complex scenarios.","sidebar":"docs"},"examples/basic-usage":{"id":"examples/basic-usage","title":"Basic Usage Examples","description":"Here are some common examples of how to use Censor in your Go applications."},"examples/complex":{"id":"examples/complex","title":"Real-World Examples","description":"Here are some realistic examples of using Censor in common scenarios where data sanitization is crucial.","sidebar":"docs"},"examples/data-leak-prevention":{"id":"examples/data-leak-prevention","title":"Data Leak Prevention Examples","description":"This guide provides examples of common scenarios where Censor can be used to prevent data leaks.","sidebar":"docs"},"examples/simple":{"id":"examples/simple","title":"Simple Examples","description":"Here are some basic examples to help you get started with Censor.","sidebar":"docs"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"This guide will help you get started with Censor quickly. We\'ll cover installation and a simple usage example.","sidebar":"docs"},"intro":{"id":"intro","title":"What is Censor","description":"Have you ever encountered a situation where a new attribute containing sensitive data was added to a struct, and somewhere in a different package that struct value was passed to a logger, resulting in sensitive data being leaked? In large codebases with multiple contributors, these mistakes happen more often than you might think.","sidebar":"docs"},"logger-handlers/slog":{"id":"logger-handlers/slog","title":"Slog Logger Integration","description":"This guide covers how to integrate Censor with Go\'s standard structured logging package log/slog.","sidebar":"docs"},"logger-handlers/zap":{"id":"logger-handlers/zap","title":"Zap Handler","description":"The Zap handler provides integration with the go.uber.org/zap logging library, allowing you to automatically mask sensitive data in your logs.","sidebar":"docs"},"logger-handlers/zerolog":{"id":"logger-handlers/zerolog","title":"Zerolog Integration","description":"This guide shows you how to integrate Censor with the Zerolog logging framework.","sidebar":"docs"},"logger-integration":{"id":"logger-integration","title":"Logger Integration","description":"Censor provides built-in handlers for popular logging frameworks, making it easy to protect sensitive data in your logs."},"output-formats":{"id":"output-formats","title":"Output Formats","description":"Censor supports two primary output formats: Text and JSON. Each format is designed for specific use cases and provides different formatting options."},"quick-start/basic-usage":{"id":"quick-start/basic-usage","title":"Basic Usage","description":"This guide will help you get started with Censor quickly. We\'ll cover the basic concepts and show you how to use Censor in your Go applications."},"security-best-practices/common-data-leak-scenarios":{"id":"security-best-practices/common-data-leak-scenarios","title":"Common Data Leak Scenarios","description":"This guide covers common scenarios where sensitive data might be leaked and how to prevent them using Censor."},"supported-types":{"id":"supported-types","title":"Supported Types","description":"Censor supports a wide range of Go types and handles them recursively when possible. Here\'s a detailed overview of how different types are processed."},"type-handling/basic-types":{"id":"type-handling/basic-types","title":"Basic Types","description":"Censor provides comprehensive support for Go\'s basic types. This guide details how each basic type is handled by Censor.","sidebar":"docs"},"type-handling/complex-types":{"id":"type-handling/complex-types","title":"Complex Types","description":"Censor provides robust support for complex Go types. This guide details how each complex type is handled by Censor.","sidebar":"docs"},"type-handling/format-specific":{"id":"type-handling/format-specific","title":"Format-Specific Type Handling","description":"Censor supports different output formats (TEXT and JSON), which can sometimes handle the same Go types differently. This guide explains the format-specific behavior of Censor.","sidebar":"docs"},"type-handling/overview":{"id":"type-handling/overview","title":"Type Support","description":"Censor provides comprehensive support for Go\'s type system, allowing you to mask sensitive data across a wide range of data structures. This guide provides an overview of the types supported by Censor.","sidebar":"docs"},"type-handling/special-types":{"id":"type-handling/special-types","title":"Special Types","description":"Censor provides support for special Go types that require specific handling. This guide details how these types are processed.","sidebar":"docs"},"types":{"id":"types","title":"Types Support","description":"This guide details which Go types are supported by Censor and how they are handled."}}}}')}}]);