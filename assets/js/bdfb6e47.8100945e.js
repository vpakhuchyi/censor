"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[341],{5493:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"logger-handlers/slog","title":"Slog Logger Integration","description":"This guide covers how to integrate Censor with Go\'s standard structured logging package log/slog.","source":"@site/docs/logger-handlers/slog.md","sourceDirName":"logger-handlers","slug":"/logger-handlers/slog","permalink":"/censor/logger-handlers/slog","draft":false,"unlisted":false,"editUrl":"https://github.com/vpakhuchyi/censor/tree/main/documentation/docs/logger-handlers/slog.md","tags":[],"version":"current","lastUpdatedBy":"Viktor","lastUpdatedAt":1743858422000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Zap","permalink":"/censor/logger-handlers/zap"},"next":{"title":"Zerolog","permalink":"/censor/logger-handlers/zerolog"}}');var l=r(4848),o=r(8453);const i={sidebar_position:3},t="Slog Logger Integration",a={},d=[{value:"Installation",id:"installation",level:2},{value:"Basic Setup",id:"basic-setup",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Custom Mask Value",id:"custom-mask-value",level:3},{value:"Exclude Patterns",id:"exclude-patterns",level:3},{value:"Text Output",id:"text-output",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Custom Field Processors",id:"custom-field-processors",level:3},{value:"Field Name Mapping",id:"field-name-mapping",level:3},{value:"Complete Example",id:"complete-example",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"slog-logger-integration",children:"Slog Logger Integration"})}),"\n",(0,l.jsxs)(n.p,{children:["This guide covers how to integrate Censor with Go's standard structured logging package ",(0,l.jsx)(n.code,{children:"log/slog"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.p,{children:"First, install the required dependencies:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"go get -u log/slog\ngo get -u github.com/vpakhuchyi/censor\n"})}),"\n",(0,l.jsx)(n.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,l.jsx)(n.p,{children:"Here's a basic example of using Censor with Slog:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "log/slog"\n    "os"\n    "github.com/vpakhuchyi/censor"\n    "github.com/vpakhuchyi/censor/logger/slog"\n)\n\nfunc main() {\n    // Create a Censor instance\n    c := censor.New()\n\n    // Create an Slog logger with Censor handler\n    logger := slog.New(\n        censorlog.NewHandler(\n            slog.NewJSONHandler(os.Stdout, &slog.HandlerOptions{\n                Level: slog.LevelDebug,\n            }),\n        ),\n    )\n\n    // Log sensitive data\n    user := User{\n        ID:       "123",\n        Email:    "user@example.com",\n        Password: "secret123",\n    }\n\n    logger.Info("user data", "user", user)\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,l.jsx)(n.h3,{id:"custom-mask-value",children:"Custom Mask Value"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'logger := slog.New(\n    censorlog.NewHandler(\n        slog.NewJSONHandler(...),\n        censorlog.WithMaskValue("[REDACTED]"),\n    ),\n)\n'})}),"\n",(0,l.jsx)(n.h3,{id:"exclude-patterns",children:"Exclude Patterns"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:"logger := slog.New(\n    censorlog.NewHandler(\n        slog.NewJSONHandler(...),\n        censorlog.WithExcludePatterns([]string{\n            `\\d{4}-\\d{4}-\\d{4}-\\d{4}`, // Credit card numbers\n            `\\d{3}-\\d{2}-\\d{4}`,       // SSN\n        }),\n    ),\n)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"text-output",children:"Text Output"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:"logger := slog.New(\n    censorlog.NewHandler(\n        slog.NewTextHandler(os.Stdout, &slog.HandlerOptions{\n            Level: slog.LevelDebug,\n        }),\n    ),\n)\n"})}),"\n",(0,l.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,l.jsx)(n.h3,{id:"custom-field-processors",children:"Custom Field Processors"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'type CustomType string\n\nlogger := slog.New(\n    censorlog.NewHandler(\n        slog.NewJSONHandler(...),\n        censorlog.WithTypeHandler(reflect.TypeOf(CustomType("")), func(v interface{}) string {\n            return "[CUSTOM_MASKED]"\n        }),\n    ),\n)\n'})}),"\n",(0,l.jsx)(n.h3,{id:"field-name-mapping",children:"Field Name Mapping"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:"logger := slog.New(\n    censorlog.NewHandler(\n        slog.NewJSONHandler(...),\n        censorlog.WithFieldNameMapper(func(name string) string {\n            return strings.ToUpper(name)\n        }),\n    ),\n)\n"})}),"\n",(0,l.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,l.jsx)(n.p,{children:"Here's a complete example showing various Slog integration features:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "log/slog"\n    "os"\n    "github.com/vpakhuchyi/censor"\n    "github.com/vpakhuchyi/censor/logger/slog"\n)\n\ntype User struct {\n    ID       string `censor:"display"`\n    Email    string\n    Password string `censor:"mask"`\n}\n\nfunc main() {\n    // Create a Censor instance with custom configuration\n    c := censor.New(\n        censor.WithMaskValue("[REDACTED]"),\n        censor.WithExcludePatterns([]string{\n            `\\d{4}-\\d{4}-\\d{4}-\\d{4}`,\n            `\\d{3}-\\d{2}-\\d{4}`,\n        }),\n    )\n\n    // Create handler options\n    opts := &slog.HandlerOptions{\n        Level: slog.LevelDebug,\n        AddSource: true,\n    }\n\n    // Create an Slog logger with Censor handler\n    logger := slog.New(\n        censorlog.NewHandler(\n            slog.NewJSONHandler(os.Stdout, opts),\n            censorlog.WithMaskValue("[REDACTED]"),\n            censorlog.WithExcludePatterns([]string{\n                `\\d{4}-\\d{4}-\\d{4}-\\d{4}`,\n                `\\d{3}-\\d{2}-\\d{4}`,\n            }),\n        ),\n    )\n\n    // Create a user\n    user := User{\n        ID:       "123",\n        Email:    "user@example.com",\n        Password: "secret123",\n    }\n\n    // Log with different levels\n    logger.Debug("debug message", "user", user)\n    logger.Info("info message", "user", user)\n    logger.Warn("warn message", "user", user)\n    logger.Error("error message", "user", user)\n\n    // Log with multiple fields\n    logger.Info("user action",\n        "action", "login",\n        "user", user,\n        "ip", "192.168.1.1",\n    )\n\n    // Log with error\n    err := fmt.Errorf("database error")\n    logger.Error("operation failed",\n        "error", err,\n        "user", user,\n    )\n\n    // Log with group\n    logger.Info("grouped data",\n        slog.Group("user",\n            "id", user.ID,\n            "email", user.Email,\n            "password", user.Password,\n        ),\n    )\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Logger Initialization"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Initialize logger once at application startup"}),"\n",(0,l.jsx)(n.li,{children:"Use appropriate log level for environment"}),"\n",(0,l.jsx)(n.li,{children:"Configure output format based on needs"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Structured Logging"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use key-value pairs for structured data"}),"\n",(0,l.jsx)(n.li,{children:"Include context with each log entry"}),"\n",(0,l.jsx)(n.li,{children:"Use groups for related fields"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Log errors with context"}),"\n",(0,l.jsx)(n.li,{children:"Use appropriate log levels"}),"\n",(0,l.jsx)(n.li,{children:"Include source information when needed"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Performance"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use appropriate handler type"}),"\n",(0,l.jsx)(n.li,{children:"Configure buffer sizes"}),"\n",(0,l.jsx)(n.li,{children:"Avoid unnecessary string formatting"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Learn about ",(0,l.jsx)(n.a,{href:"zap",children:"Zap Integration"})]}),"\n",(0,l.jsxs)(n.li,{children:["Check out ",(0,l.jsx)(n.a,{href:"zerolog",children:"Zerolog Integration"})]}),"\n",(0,l.jsxs)(n.li,{children:["Review ",(0,l.jsx)(n.a,{href:"../configuration",children:"Configuration"})," options"]}),"\n",(0,l.jsxs)(n.li,{children:["See ",(0,l.jsx)(n.a,{href:"../examples/data-leak-prevention",children:"Examples"})," for more use cases"]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>t});var s=r(6540);const l={},o=s.createContext(l);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);