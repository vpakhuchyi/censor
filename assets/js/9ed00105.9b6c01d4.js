"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[873],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},8730:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"configuration","title":"Configuration","description":"Censor provides flexible configuration options to customize its behavior.","source":"@site/docs/configuration.md","sourceDirName":".","slug":"/configuration","permalink":"/censor/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/vpakhuchyi/censor-doc/tree/main/docs/configuration.md","tags":[],"version":"current","lastUpdatedBy":"Viktor","lastUpdatedAt":1744454824000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Getting Started","permalink":"/censor/getting-started"},"next":{"title":"Overview","permalink":"/censor/type-handling/overview"}}');var s=t(4848),r=t(8453);const o={sidebar_position:3},a="Configuration",l={},c=[{value:"Using the <code>censor.Config</code> struct",id:"using-the-censorconfig-struct",level:3},{value:"Providing a <code>.yml</code> configuration file",id:"providing-a-yml-configuration-file",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,s.jsx)(n.p,{children:"Censor provides flexible configuration options to customize its behavior."}),"\n",(0,s.jsx)(n.p,{children:"There are two sources for the configuration:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Using a ",(0,s.jsx)(n.code,{children:"censor.Config"})," struct during Censor initialization"]}),"\n",(0,s.jsxs)(n.li,{children:["Providing a ",(0,s.jsx)(n.code,{children:".yml"})," configuration file"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Here is a list of available configuration options:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Go name"}),(0,s.jsx)(n.th,{children:"YML name"}),(0,s.jsx)(n.th,{children:"Default value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"OutputFormat"}),(0,s.jsx)(n.td,{children:"output-format"}),(0,s.jsx)(n.td,{children:"json"}),(0,s.jsxs)(n.td,{children:["The output format that will be used for",(0,s.jsx)("br",{}),"the formatted values (TEXT or JSON)."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"PrintConfigOnInit"}),(0,s.jsx)(n.td,{children:"print-config-on-init"}),(0,s.jsx)(n.td,{children:"true"}),(0,s.jsxs)(n.td,{children:["Print the configuration when any of the available ",(0,s.jsx)("br",{}),"constructors is used."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"UseJSONTagName"}),(0,s.jsx)(n.td,{children:"use-json-tag-name"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"Use JSON tag name instead of the Go struct field name."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MaskValue"}),(0,s.jsx)(n.td,{children:"mask-value"}),(0,s.jsx)(n.td,{children:"[CENSORED]"}),(0,s.jsx)(n.td,{children:"The value that will be used to mask the sensitive information."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"DisplayStructName"}),(0,s.jsx)(n.td,{children:"display-struct-name"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"Display a struct name in the TEXT output."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"DisplayMapType"}),(0,s.jsx)(n.td,{children:"display-map-type"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"Display a map type in the TEXT output."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"DisplayPointerSymbol"}),(0,s.jsx)(n.td,{children:"display-pointer-symbol"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"Display '&' (the pointer symbol) in the TEXT output."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"EnableJSONEscaping"}),(0,s.jsx)(n.td,{children:"enable-json-escaping"}),(0,s.jsx)(n.td,{children:"true"}),(0,s.jsx)(n.td,{children:"Enable JSON escaping."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ExcludePatterns"}),(0,s.jsx)(n.td,{children:"exclude-patterns"}),(0,s.jsx)(n.td,{children:"[]"}),(0,s.jsxs)(n.td,{children:["A list of regular expressions that will be compared",(0,s.jsx)("br",{}),"against all the string values. If a value matches any ",(0,s.jsx)("br",{}),"of the patterns, that section will be masked."]})]})]})]}),"\n",(0,s.jsxs)(n.h3,{id:"using-the-censorconfig-struct",children:["Using the ",(0,s.jsx)(n.code,{children:"censor.Config"})," struct"]}),"\n",(0,s.jsxs)(n.p,{children:["The following example demonstrates how to configure Censor programmatically using the ",(0,s.jsx)(n.code,{children:"censor.Config"})," struct. This approach gives you full control over the configuration at runtime and allows you to modify settings based on your application's needs."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport "github.com/vpakhuchyi/censor"\n\nfunc main() {\n    // Create a configuration with custom settings\n    cfg := censor.Config{\n        General: censor.General{\n            OutputFormat:      censor.OutputFormatJSON,\n            PrintConfigOnInit: true,\n        },\n        Encoder: censor.EncoderConfig{\n            DisplayMapType:       false,\n            DisplayPointerSymbol: false,\n            DisplayStructName:    false,\n            ExcludePatterns:     []string{`\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b`},\n            MaskValue:           "[####]",\n            UseJSONTagName:      false,\n        },\n    }\n\n    p, err := censor.NewWithOpts(censor.WithConfig(&cfg))\n    if err != nil {\n        // Handle error\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"providing-a-yml-configuration-file",children:["Providing a ",(0,s.jsx)(n.code,{children:".yml"})," configuration file"]}),"\n",(0,s.jsx)(n.p,{children:"For applications that prefer configuration through files, Censor supports loading settings from a YAML file. This approach is particularly useful when you need to change settings without recompiling the application or when deploying to different environments."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport "github.com/vpakhuchyi/censor"\n\nfunc main() {\n    // Specify the path to your configuration file\n    pathToConfigFile := "./cfg_example.yml"\n\n    // Create a new Censor instance using the configuration file\n    // This will load all settings from the specified YAML file\n    p, err := censor.NewWithOpts(censor.WithConfigPath(pathToConfigFile))\n    if err != nil {\n        // Handle error\n    }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Here is an example of the configuration file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'general:\n  output-format: json\nencoder:\n  display-map-type: false\n  display-pointer-symbol: false\n  display-struct-name: false\n  enable-json-escaping: true\n  exclude-patterns: []\n  mask-value: "[CENSORED]"\n  use-json-tag-name: false\n'})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Learn about ",(0,s.jsx)(n.a,{href:"type-handling/overview",children:"Type Support"})," options"]}),"\n",(0,s.jsxs)(n.li,{children:["See ",(0,s.jsx)(n.a,{href:"logger-handlers/zap",children:"Logger Integration"})," for logging frameworks"]}),"\n",(0,s.jsxs)(n.li,{children:["Check out ",(0,s.jsx)(n.a,{href:"examples/data-leak-prevention",children:"Examples"})," for real-world usage"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);